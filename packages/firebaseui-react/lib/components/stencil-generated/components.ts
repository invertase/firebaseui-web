'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import { type FuiButtonCustomEvent, type FuiInputCustomEvent, type FuiPhoneFormCustomEvent, type PhoneFormState, type RecaptchaVerifier } from "firebaseui-stencil";
import { FuiButton as FuiButtonElement, defineCustomElement as defineFuiButton } from "firebaseui-stencil/dist/components/fui-button.js";
import { FuiEmailForm as FuiEmailFormElement, defineCustomElement as defineFuiEmailForm } from "firebaseui-stencil/dist/components/fui-email-form.js";
import { FuiEmailLinkForm as FuiEmailLinkFormElement, defineCustomElement as defineFuiEmailLinkForm } from "firebaseui-stencil/dist/components/fui-email-link-form.js";
import { FuiFieldset as FuiFieldsetElement, defineCustomElement as defineFuiFieldset } from "firebaseui-stencil/dist/components/fui-fieldset.js";
import { FuiForgotPasswordForm as FuiForgotPasswordFormElement, defineCustomElement as defineFuiForgotPasswordForm } from "firebaseui-stencil/dist/components/fui-forgot-password-form.js";
import { FuiGoogleSignIn as FuiGoogleSignInElement, defineCustomElement as defineFuiGoogleSignIn } from "firebaseui-stencil/dist/components/fui-google-sign-in.js";
import { FuiInput as FuiInputElement, defineCustomElement as defineFuiInput } from "firebaseui-stencil/dist/components/fui-input.js";
import { FuiLoginForm as FuiLoginFormElement, defineCustomElement as defineFuiLoginForm } from "firebaseui-stencil/dist/components/fui-login-form.js";
import { FuiPhoneForm as FuiPhoneFormElement, defineCustomElement as defineFuiPhoneForm } from "firebaseui-stencil/dist/components/fui-phone-form.js";
import React from 'react';

type FuiButtonEvents = { onFuiClick: EventName<FuiButtonCustomEvent<MouseEvent>> };

export const FuiButton: StencilReactComponent<FuiButtonElement, FuiButtonEvents> = /*@__PURE__*/ createComponent<FuiButtonElement, FuiButtonEvents>({
    tagName: 'fui-button',
    elementClass: FuiButtonElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onFuiClick: 'fuiClick' } as FuiButtonEvents,
    defineCustomElement: defineFuiButton
});

type FuiEmailFormEvents = {
    onEmailChange: EventName<CustomEvent<string>>,
    onPasswordChange: EventName<CustomEvent<string>>,
    onToggleAuthMode: EventName<CustomEvent<void>>,
    onForgotPassword: EventName<CustomEvent<void>>
};

export const FuiEmailForm: StencilReactComponent<FuiEmailFormElement, FuiEmailFormEvents> = /*@__PURE__*/ createComponent<FuiEmailFormElement, FuiEmailFormEvents>({
    tagName: 'fui-email-form',
    elementClass: FuiEmailFormElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onEmailChange: 'emailChange',
        onPasswordChange: 'passwordChange',
        onToggleAuthMode: 'toggleAuthMode',
        onForgotPassword: 'forgotPassword'
    } as FuiEmailFormEvents,
    defineCustomElement: defineFuiEmailForm
});

type FuiEmailLinkFormEvents = { onEmailChange: EventName<CustomEvent<string>> };

export const FuiEmailLinkForm: StencilReactComponent<FuiEmailLinkFormElement, FuiEmailLinkFormEvents> = /*@__PURE__*/ createComponent<FuiEmailLinkFormElement, FuiEmailLinkFormEvents>({
    tagName: 'fui-email-link-form',
    elementClass: FuiEmailLinkFormElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onEmailChange: 'emailChange' } as FuiEmailLinkFormEvents,
    defineCustomElement: defineFuiEmailLinkForm
});

type FuiFieldsetEvents = NonNullable<unknown>;

export const FuiFieldset: StencilReactComponent<FuiFieldsetElement, FuiFieldsetEvents> = /*@__PURE__*/ createComponent<FuiFieldsetElement, FuiFieldsetEvents>({
    tagName: 'fui-fieldset',
    elementClass: FuiFieldsetElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as FuiFieldsetEvents,
    defineCustomElement: defineFuiFieldset
});

type FuiForgotPasswordFormEvents = {
    onEmailChange: EventName<CustomEvent<string>>,
    onSubmitReset: EventName<CustomEvent<void>>,
    onBackToLogin: EventName<CustomEvent<void>>
};

export const FuiForgotPasswordForm: StencilReactComponent<FuiForgotPasswordFormElement, FuiForgotPasswordFormEvents> = /*@__PURE__*/ createComponent<FuiForgotPasswordFormElement, FuiForgotPasswordFormEvents>({
    tagName: 'fui-forgot-password-form',
    elementClass: FuiForgotPasswordFormElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onEmailChange: 'emailChange',
        onSubmitReset: 'submitReset',
        onBackToLogin: 'backToLogin'
    } as FuiForgotPasswordFormEvents,
    defineCustomElement: defineFuiForgotPasswordForm
});

type FuiGoogleSignInEvents = { onSignedIn: EventName<CustomEvent<void>> };

export const FuiGoogleSignIn: StencilReactComponent<FuiGoogleSignInElement, FuiGoogleSignInEvents> = /*@__PURE__*/ createComponent<FuiGoogleSignInElement, FuiGoogleSignInEvents>({
    tagName: 'fui-google-sign-in',
    elementClass: FuiGoogleSignInElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onSignedIn: 'signedIn' } as FuiGoogleSignInEvents,
    defineCustomElement: defineFuiGoogleSignIn
});

type FuiInputEvents = {
    onFuiInput: EventName<FuiInputCustomEvent<InputEvent>>,
    onFuiBlur: EventName<FuiInputCustomEvent<FocusEvent>>,
    onFuiFocus: EventName<FuiInputCustomEvent<FocusEvent>>
};

export const FuiInput: StencilReactComponent<FuiInputElement, FuiInputEvents> = /*@__PURE__*/ createComponent<FuiInputElement, FuiInputEvents>({
    tagName: 'fui-input',
    elementClass: FuiInputElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onFuiInput: 'fuiInput',
        onFuiBlur: 'fuiBlur',
        onFuiFocus: 'fuiFocus'
    } as FuiInputEvents,
    defineCustomElement: defineFuiInput
});

type FuiLoginFormEvents = NonNullable<unknown>;

export const FuiLoginForm: StencilReactComponent<FuiLoginFormElement, FuiLoginFormEvents> = /*@__PURE__*/ createComponent<FuiLoginFormElement, FuiLoginFormEvents>({
    tagName: 'fui-login-form',
    elementClass: FuiLoginFormElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as FuiLoginFormEvents,
    defineCustomElement: defineFuiLoginForm
});

type FuiPhoneFormEvents = {
    onPhoneNumberChange: EventName<CustomEvent<string>>,
    onVerificationCodeChange: EventName<CustomEvent<string>>,
    onRecaptchaVerifierChange: EventName<FuiPhoneFormCustomEvent<RecaptchaVerifier>>,
    onRecaptchaVerified: EventName<CustomEvent<void>>,
    onCanSubmit: EventName<CustomEvent<boolean>>,
    onVerificationSentChange: EventName<CustomEvent<boolean>>,
    onFormStateChange: EventName<FuiPhoneFormCustomEvent<PhoneFormState>>
};

export const FuiPhoneForm: StencilReactComponent<FuiPhoneFormElement, FuiPhoneFormEvents> = /*@__PURE__*/ createComponent<FuiPhoneFormElement, FuiPhoneFormEvents>({
    tagName: 'fui-phone-form',
    elementClass: FuiPhoneFormElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onPhoneNumberChange: 'phoneNumberChange',
        onVerificationCodeChange: 'verificationCodeChange',
        onRecaptchaVerifierChange: 'recaptchaVerifierChange',
        onRecaptchaVerified: 'recaptchaVerified',
        onCanSubmit: 'canSubmit',
        onVerificationSentChange: 'verificationSentChange',
        onFormStateChange: 'formStateChange'
    } as FuiPhoneFormEvents,
    defineCustomElement: defineFuiPhoneForm
});
